name: macos

on:
  # Runs on all pushes
  push:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# When pushing new commits, cancel any running builds on that branch
concurrency:
  group: macos-latest-${{ github.ref }}
  cancel-in-progress: true

env:
  DISPLAY: :0
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  CMAKE_INSTALL_PARALLEL_LEVEL: 3
  BUILD_DIR: ${{ github.workspace }}/build
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  HOMEBREW_NO_INSTALL_CLEANUP: 1
  RACK_SDK_VERSION: 2.5.2
  RACK_SDK_PLATFORM: "mac-x64+arm64"

jobs:
  macos:
    runs-on: macos-latest

    steps:

      # REQUIREMENTS

    - name: Checkout StoneyVCV code
      uses: actions/checkout@v4
      with:
        submodules: true

      # https://vcvrack.com/manual/Building#Setting-up-your-development-environment
    - name: Install VCV's macOS Deps
      run: |
        brew install git wget cmake autoconf automake libtool jq python zstd pkg-config sccache ninja tree

    - name: Fetch Rack SDK
      run: |
        curl https://vcvrack.com/downloads/Rack-SDK-${{env.RACK_SDK_VERSION}}-${{env.RACK_SDK_PLATFORM}}.zip -o ./dep/Rack-SDK-${{env.RACK_SDK_VERSION}}-${{env.RACK_SDK_PLATFORM}}.zip
        cd dep
        unzip Rack-SDK-${{env.RACK_SDK_VERSION}}-${{env.RACK_SDK_PLATFORM}}.zip
        cd ..

      # DEVELOPER WORKFLOW

    - name: Configure
      env:
        RACK_DIR: ${{ github.workspace }}/dep/Rack-SDK
      run: >-
        cmake
        --preset arm64-osx-release
        --fresh

    - name: Install
      run: >-
        cmake
        --install ${{ env.BUILD_DIR }}
        --prefix ${{ github.workspace }}/install
        --strip
        -j 3

      # DEPLOYMENT WORKFLOW

    - name: Package
      env:
        RACK_DIR: ${{ github.workspace }}/dep/Rack-SDK
      run: make package -j 3

    # List all files in tree
    - name: List
      run: |
        cd install
        tree
        cd ..
